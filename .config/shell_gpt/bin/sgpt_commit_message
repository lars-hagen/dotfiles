#!/bin/bash

# Check for flags
AUTO_ACCEPT=false
GIT_ADD=false

for arg in "$@"; do
    case $arg in
        -y|-e|--yes|--auto|--accept) 
            AUTO_ACCEPT=true
            shift ;;
        -g|--git-add)
            GIT_ADD=true
            shift ;;
    esac
done

# Handle git add if flag was set
if [[ $GIT_ADD == true ]]; then
    echo "Adding all tracked files with changes..."
    git add -u
fi

USER_INSTRUCTIONS="${1:-No specific instructions. Use base workflow.}"

# Check if we're in the reepay-cli directory
if [[ $(pwd) == */reepay-cli ]]; then
    echo "Running code formatters..."
    # Run formatters and capture black's output
    black_output=$(poetry run black . 2>&1)
    poetry run ruff check --fix .
    
    # Add any files that black reformatted
    while read -r file; do
        [ ! -z "$file" ] && git add "$file"
    done < <(echo "$black_output" | grep "^reformatted" | sed 's/^reformatted //')
fi

echo $SHELL
if [[ $AUTO_ACCEPT == true ]]; then
    # Capture and execute the output when auto-accepting
    COMMANDS=$(git diff --cached | /Users/lars/.local/bin/sgpt --no-interaction --shell "
USER INSTRUCTIONS: $USER_INSTRUCTIONS

Interpret user instructions as workflow modifications. Common instructions:
- 'skip pr': Skip pull request creation and merging steps
- 'use commit type X': Use specified commit type instead of default
- 'use branch': Skip branch creation, use current branch and 'git push origin HEAD'
- 'use generic commit message': Use a generic commit message like 'Updated {filepath}', do not mention lines changed.

do never run:
git config --local user.name
git config --local user.email

For steps not modified by user instructions, follow this base workflow:

<example>
* Create a commit message based on the staged changes, or use generic commit message.
* Commit the changes
* Push the commit to the current branch
</example>

Output commands with explanatory comments. Generate commit messages from actual diff content.
Prioritize user instructions over base workflow where applicable.
Do not include 'git add' commands unless specifically instructed to do so.
")
    echo "$COMMANDS"
    eval "$COMMANDS"
else
    # Original behavior when not auto-accepting
    git diff --cached | /Users/lars/.local/bin/sgpt --shell "
USER INSTRUCTIONS: $USER_INSTRUCTIONS

Interpret user instructions as workflow modifications. Common instructions:
- 'skip pr': Skip pull request creation and merging steps
- 'use commit type X': Use specified commit type instead of default
- 'use branch': Skip branch creation, use current branch and 'git push origin HEAD'
- 'use generic commit message': Use a generic commit message like 'Updated {filepath}', do not mention lines changed.

do never run:
git config --local user.name
git config --local user.email

For steps not modified by user instructions, follow this base workflow:

<example>
* Create a commit message based on the staged changes, or use generic commit message.
* Commit the changes
* Push the commit to the current branch
</example>

Output commands with explanatory comments. Generate commit messages from actual diff content.
Prioritize user instructions over base workflow where applicable.
Do not include 'git add' commands unless specifically instructed to do so.
"
fi