# Place a copy of this config to ~/.aerospace.toml
# After that, you can edit ~/.aerospace.toml to your liking

automatically-unhide-macos-hidden-apps = true

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
after-startup-command = [
    # JankyBorders has a built-in detection of already running process,
    # so it won't be run twice on AeroSpace restart
    'exec-and-forget borders'
]

# Start AeroSpace at login
start-at-login = true

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization


enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 30

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Possible values: (qwerty|dvorak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
key-mapping.preset = 'qwerty'

# Modify your focus callbacks to be more mouse-aware
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']
#on-focus-changed = ['move-mouse window-lazy-center']

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
inner.horizontal = 10
inner.vertical = 10
outer.left = 10
outer.bottom = 10
outer.top = 10
outer.right = 10

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
# Fallback value (if you omit the key): mode.main.binding = {}
[mode.main.binding]
# Window / Monitor Focus (ctrl-alt + arrows)
ctrl-alt-left = 'focus left --boundaries all-monitors-outer-frame'
ctrl-alt-right = 'focus right --boundaries all-monitors-outer-frame'
ctrl-alt-up = 'focus up --boundaries all-monitors-outer-frame'
ctrl-alt-down = 'focus down --boundaries all-monitors-outer-frame'
ctrl-alt-tab = '''exec-and-forget /bin/bash -c 'FIRST_WORKSPACE=$(aerospace list-workspaces --monitor focused --visible) && \
aerospace focus-monitor --wrap-around next && \
SECOND_WORKSPACE=$(aerospace list-workspaces --monitor focused --visible) && \
for id in $(aerospace list-windows --workspace "$FIRST_WORKSPACE" --format "%{window-id}"); do \
    aerospace move-node-to-workspace --window-id "$id" "$SECOND_WORKSPACE"; \
done' '''
ctrl-alt-shift-tab = '''exec-and-forget /bin/bash -c 'FIRST_WORKSPACE=$(aerospace list-workspaces --monitor focused --visible) && \
aerospace focus-monitor --wrap-around prev && \
SECOND_WORKSPACE=$(aerospace list-workspaces --monitor focused --visible) && \
for id in $(aerospace list-windows --workspace "$FIRST_WORKSPACE" --format "%{window-id}"); do \
    aerospace move-node-to-workspace --window-id "$id" "$SECOND_WORKSPACE"; \
done' '''
ctrl-alt-shift-left = ['move left']
ctrl-alt-shift-right = ['move right']
ctrl-alt-shift-up = ['move up']
ctrl-alt-shift-down = ['move down']
ctrl-alt-shift-cmd-left = [
    'move-node-to-monitor left',
    'focus-monitor left'
]
ctrl-alt-shift-cmd-right = [
    'move-node-to-monitor right',
    'focus-monitor right'
]
ctrl-alt-shift-cmd-up = [
    'move-node-to-monitor up',
    'focus-monitor up'
]
ctrl-alt-shift-cmd-down = [
    'move-node-to-monitor down',
    'focus-monitor down'
]
# Move window right within monitor or to right monitor if at boundary
# alt-shift-right = [
#     'move right',
#     'move-node-to-monitor right',
#     'focus-monitor right',
#     'move-mouse monitor-lazy-center'
# ] 

# Resize Windows (cmd-alt + hjkl)
cmd-alt-h = 'resize width -50'    # Shrink width
cmd-alt-l = 'resize width +50'    # Grow width
cmd-alt-k = 'resize height -50'   # Shrink height
cmd-alt-j = 'resize height +50'   # Grow height

# Layout Controls
ctrl-alt-slash = 'layout tiles horizontal vertical'    # Tile layout
ctrl-alt-comma = 'layout accordion horizontal vertical' # Accordion layout
ctrl-cmd-f = 'fullscreen'                         # Toggle fullscreen   

# Workspace Navigation
alt-tab = 'workspace-back-and-forth'         # Toggle last workspace
# ctrl-shift-tab = 'move-workspace-to-monitor --wrap-around prev'                     # Enter workspace mode
ctrl-alt-cmd-up = 'workspace prev'                # Previous workspace
ctrl-alt-cmd-down = 'workspace next'              # Next workspace
 
# Join Windows (ctrl-shift-cmd + arrows)
ctrl-shift-cmd-left = ['join-with left']
ctrl-shift-cmd-right = ['join-with right']
ctrl-shift-cmd-up = ['join-with up']
ctrl-shift-cmd-down = ['join-with down']

# Quick Workspace Switching
alt-s = ['workspace S1']
alt-1 = ['workspace 1']
alt-2 = ['workspace 2']
alt-3 = ['workspace 3'] 
alt-4 = ['workspace 4']
alt-5 = ['workspace 5']
alt-6 = ['workspace 6']
alt-l = ['workspace L1']
alt-e = ['workspace S2']  # Switch to workspace S2

# Move Windows to Workspaces
alt-shift-s = ['move-node-to-workspace S1', 'workspace S1']
alt-shift-1 = ['move-node-to-workspace 1', 'workspace 1']
alt-shift-2 = ['move-node-to-workspace 2', 'workspace 2']
alt-shift-3 = ['move-node-to-workspace 3', 'workspace 3']
alt-shift-4 = ['move-node-to-workspace 4', 'workspace 4']
alt-shift-5 = ['move-node-to-workspace 5', 'workspace 5']
alt-shift-6 = ['move-node-to-workspace 6', 'workspace 6']
alt-shift-l = ['move-node-to-workspace L1', 'workspace L1']
alt-shift-e = ['move-node-to-workspace S2', 'workspace S2']  # Move window to workspace S2 and switch

# Mode Switching
ctrl-alt-space = 'mode service'  # Enter service mode
#ctrl-alt-w = 'mode workspace'
ctrl-alt-s = 'mode secondary'
ctrl-alt-q = 'mode apps'  # Changed from ctrl-alt-p to ctrl-alt-a
ctrl-alt-l = 'mode laptop'
ctrl-alt-t = 'mode temp'
ctrl-alt-a = 'mode move-all'

[mode.move-all.binding]
# Each number will move all windows to that workspace
1 = '''exec-and-forget /bin/bash -c 'for id in $(aerospace list-windows --workspace "$(aerospace list-workspaces --focused)" --format "%{window-id}"); do aerospace move-node-to-workspace --window-id "$id" 1; done' && aerospace workspace 1 && aerospace mode main'''
2 = '''exec-and-forget /bin/bash -c 'for id in $(aerospace list-windows --workspace "$(aerospace list-workspaces --focused)" --format "%{window-id}"); do aerospace move-node-to-workspace --window-id "$id" 2; done' && aerospace workspace 2 && aerospace mode main'''
3 = '''exec-and-forget /bin/bash -c 'for id in $(aerospace list-windows --workspace "$(aerospace list-workspaces --focused)" --format "%{window-id}"); do aerospace move-node-to-workspace --window-id "$id" 3; done' && aerospace workspace 3 && aerospace mode main'''
4 = '''exec-and-forget /bin/bash -c 'for id in $(aerospace list-windows --workspace "$(aerospace list-workspaces --focused)" --format "%{window-id}"); do aerospace move-node-to-workspace --window-id "$id" 4; done' && aerospace workspace 4 && aerospace mode main'''
5 = '''exec-and-forget /bin/bash -c 'for id in $(aerospace list-windows --workspace "$(aerospace list-workspaces --focused)" --format "%{window-id}"); do aerospace move-node-to-workspace --window-id "$id" 5; done' && aerospace workspace 5 && aerospace mode main'''
6 = '''exec-and-forget /bin/bash -c 'for id in $(aerospace list-windows --workspace "$(aerospace list-workspaces --focused)" --format "%{window-id}"); do aerospace move-node-to-workspace --window-id "$id" 6; done' && aerospace workspace 6 && aerospace mode main'''
s = '''exec-and-forget /bin/bash -c 'for id in $(aerospace list-windows --workspace "$(aerospace list-workspaces --focused)" --format "%{window-id}"); do aerospace move-node-to-workspace --window-id "$id" S1; done' && aerospace workspace S1 && aerospace mode main'''
esc = ['mode main']

[mode.secondary.binding]
1 = ['workspace S1','mode main']
2 = ['workspace S2','mode main']
3 = ['workspace S3','mode main']
4 = ['workspace S4','mode main']
shift-1 = ['move-node-to-workspace S1','workspace S1','mode main']
shift-2 = ['move-node-to-workspace S2','workspace S2','mode main']
shift-3 = ['move-node-to-workspace S3','workspace S3','mode main']
shift-4 = ['move-node-to-workspace S4','workspace S4','mode main']
esc = ['mode main']

[mode.laptop.binding]
1 = ['workspace L1','mode main']
2 = ['workspace L2','mode main']
3 = ['workspace L3','mode main']
4 = ['workspace L4','mode main']
shift-1 = ['move-node-to-workspace L1','workspace L1','mode main']
shift-2 = ['move-node-to-workspace L2','workspace L2','mode main']
shift-3 = ['move-node-to-workspace L3','workspace L3','mode main']
shift-4 = ['move-node-to-workspace L4','workspace L4','mode main']
esc = ['mode main']

[mode.temp.binding]
1 = ['workspace TEMP1','mode main']
2 = ['workspace TEMP2','mode main']
3 = ['workspace TEMP3','mode main']
4 = ['workspace TEMP4','mode main']
shift-1 = ['move-node-to-workspace TEMP1','workspace TEMP1','mode main']
shift-2 = ['move-node-to-workspace TEMP2','workspace TEMP2','mode main']
shift-3 = ['move-node-to-workspace TEMP3','workspace TEMP3','mode main']
shift-4 = ['move-node-to-workspace TEMP4','workspace TEMP4','mode main']
esc = ['mode main']

[mode.apps.binding]
s = ['workspace slack', 'mode main']
m = ['workspace spotify', 'mode main']
b = ['workspace browser', 'mode main']
shift-s = ['move-node-to-workspace slack', 'workspace slack', 'mode main']
shift-m = ['move-node-to-workspace spotify', 'workspace spotify', 'mode main']
shift-b = ['move-node-to-workspace browser', 'workspace browser', 'mode main']
1 = ['workspace slack', 'mode main']
2 = ['workspace spotify', 'mode main']
3 = ['workspace browser', 'mode main']
esc = ['mode main']

# Launch Applications
# ctrl-alt-return = '''exec-and-forget osascript -e '
#     tell application "Terminal"
#         do script
#         activate
#     end tell'
# '''

#alt = ['workspace 1', 'mode main']

ctrl-alt-1 = ['workspace 1']
ctrl-alt-2 = ['workspace 2']
ctrl-alt-3 = ['workspace 3']
ctrl-alt-4 = ['workspace 4']
ctrl-alt-5 = ['workspace 5']
ctrl-alt-6 = ['workspace 6']

ctrl-alt-shift-1 = ['move-node-to-workspace 1', 'workspace 1']
ctrl-alt-shift-2 = ['move-node-to-workspace 2', 'workspace 2']
ctrl-alt-shift-3 = ['move-node-to-workspace 3', 'workspace 3']
ctrl-alt-shift-4 = ['move-node-to-workspace 4', 'workspace 4']
ctrl-alt-shift-5 = ['move-node-to-workspace 5', 'workspace 5']
ctrl-alt-shift-6 = ['move-node-to-workspace 6', 'workspace 6']

# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
esc = ['reload-config','exec-and-forget borders', 'mode main']
r = ['flatten-workspace-tree', 'mode main'] # reset layout
f = ['layout floating tiling', 'mode main'] # Toggle between floating and tiling layout
backspace = ['close-all-windows-but-current', 'mode main']

# sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2
#s = ['layout sticky tiling', 'mode main']

left = ['join-with left', 'mode main']
down = ['join-with down', 'mode main']
up = ['join-with up', 'mode main']
right = ['join-with right', 'mode main']

[[on-window-detected]]
if.app-id = 'com.google.Chrome'
if.window-title-regex-substring = 'AWS Authentication'
run = ['layout floating']  # Make it floating and don't focus

[[on-window-detected]]
if.app-id = 'org.tabby'
run = ['layout floating']

[workspace-to-monitor-force-assignment]
1 = 'main'      # Assigns workspace 1 to your main monitor (with menu bar)
2 = 'main'      # Assigns workspace 2 to your main monitor (with menu bar)
3 = 'main'
4 = 'main'
5 = 'main'
6 = 'main'
TEMP1 = 'main'
TEMP2 = 'main'
TEMP3 = 'main'
TEMP4 = 'main'
S1 = ['dell', 'built-in'] #secondary
S2 = ['dell', 'built-in']
S3 = ['dell', 'built-in']
S4 = ['dell', 'built-in']
L1 = ['built-in', 'dell'] #laptop
L2 = ['built-in', 'dell']
L3 = ['built-in', 'dell']
L4 = ['built-in', 'dell']
slack = 'main'    # Slack workspace
spotify = 'main'  # Spotify workspace
browser = 'main'  # Browser workspace

